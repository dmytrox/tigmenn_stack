version: "3.6"
services:
  telegraf:
    container_name: telegraf
    image: telegraf:1.18-alpine
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
      - "127.0.0.1:8125:8125/udp"

  influxdb:
    container_name: influxdb
    image: influxdb:1.8-alpine
    env_file: configuration.env
    ports:
      - "127.0.0.1:8086:8086"
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb

  grafana:
    container_name: grafana
    image: grafana/grafana:8.0.2
    depends_on:
      - influxdb
    env_file: configuration.env
    links:
      - influxdb
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
      - ./grafana/plugins/:/var/lib/grafana/plugins/
  node:
    container_name: node
    restart: always
    build: ./app
    image: node
    volumes:
      - ./app:/code
    environment:
      - ES_HOST=elasticsearch
      - ELASTIC_URL=http://elasticsearch:9200
    ports:
      - "4000:4000"
    depends_on:
      - mongo
      - elasticsearch
    links:
      - elasticsearch            
  mongo:
    container_name: mongodb
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - mongodb:/data/db
  nginx:      
    container_name: nginx
    image: nginx:alpine
    restart: always
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - 80:80
    depends_on:
      - node
  elasticsearch:
    container_name: elasticsearch
    image:  docker.elastic.co/elasticsearch/elasticsearch:8.2.3
    volumes:
      - ./esdata:/usr/share/elasticsearch/data
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - xpack.security.enabled=false    
    ports:
      - 9300:9300
      - 9200:9200
volumes:
  grafana_data: {}
  influxdb_data: {}
  mongodb: {}
